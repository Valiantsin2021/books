service: lesson-4-demo

plugins:
  - serverless-export-outputs
  - serverless-appsync-plugin
  - serverless-lumigo
  - serverless-iam-roles-per-function

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x

custom:
  appSync:
    - ${file(serverless.appsync.yml)}

  lumigo:
    # 1. go to https://lumigo.io and sign up for a free account
    # 2. go to Settings -> Tracing and note your token
    # 3. when deploying, set the token to the env var LUMIGO_TOKEN
    token: ${env:LUMIGO_TOKEN}
    skipInstallNodeTracer: true

  exportOutputs:
    include:
      - AwsRegion
      - ApiUrl
      - CognitoUserPoolId
      - CognitoWebClientId
    output:
      file: ./.env

functions:
  tweet:
    handler: functions/tweet.handler
    environment:
      TWEETS_TABLE: !Ref TweetsTable
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:PutItem
        Resource: !GetAtt TweetsTable.Arn

  distributeTweets:
    handler: functions/distribute-tweets.handler
    environment:
      RELATIONSHIPS_TABLE: !Ref RelationshipsTable
      TIMELINES_TABLE: !Ref TimelinesTable
    events:
      - stream:
          type: dynamodb
          arn: !GetAtt TweetsTable.StreamArn
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - dynamodb:PutItem
          - dynamodb:DeleteItem
          - dynamodb:BatchWriteItem
        Resource: !GetAtt TimelinesTable.Arn
      - Effect: Allow
        Action: dynamodb:Query
        Resource: !Sub "${RelationshipsTable.Arn}/index/byOtherUser"

resources:
  Resources:
    TweetsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

    TimelinesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: tweetId
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: tweetId
            AttributeType: S

    RelationshipsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
          - AttributeName: otherUserId
            AttributeType: S
        GlobalSecondaryIndexes:
          - IndexName: byOtherUser
            KeySchema:
              - AttributeName: otherUserId
                KeyType: HASH
              - AttributeName: sk
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        AutoVerifiedAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: false
            RequireNumbers: false
            RequireUppercase: false
            RequireSymbols: false
        UsernameAttributes:
          - email
        Schema:
          - AttributeDataType: String
            Name: name
            Required: false
            Mutable: true

    WebUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        UserPoolId: !Ref CognitoUserPool
        ClientName: web
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        PreventUserExistenceErrors: ENABLED

  Outputs:
    AwsRegion:
      Value: ${aws:region}

    CognitoUserPoolId:
      Value: !Ref CognitoUserPool
      
    CognitoWebClientId:
      Value: !Ref WebUserPoolClient

    ApiUrl:
      Value: 
        Fn::GetAtt:
          - Lesson4demoGraphQlApi
          - GraphQLUrl